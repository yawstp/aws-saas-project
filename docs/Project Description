# Project Blueprint (LLM‑Friendly, Source of Truth for Outline)

## Overview (Goal)

Build a **production-grade, multi-tenant serverless SaaS on AWS** with Terraform, CI/CD, security guardrails, observability, analytics, and DR.

---

## Glossary (stable)

* **tenantId**: Identifier carried in Cognito JWT to scope data and permissions.
* **CRUD API**: API Gateway → Lambda → DynamoDB (single-table) operations.
* **Feature flags**: AppConfig toggles for progressive delivery.
* **PITR**: DynamoDB Point‑In‑Time Recovery.
* **DLQ**: Dead‑Letter Queue (SQS) for failed async processing.

---

## Repo Layout (canonical)

```
/infra/terraform/       # AWS resources via Terraform
/services/api/          # Lambda handlers + tests
/services/workers/      # Async consumers, Step Functions
/frontend/              # SPA (React/Vite)
/docs/                  # ADRs, runbooks, threat model, diagrams, progress
.github/workflows/      # CI: lint/test/plan/apply, canary
```

---

## Milestones (Plan)

1. **Week 1 — Foundations**
2. **Week 2 — Auth & Core API**
3. **Week 3 — Async & Feature Flags**
4. **Week 4 — Analytics & Billing (Stripe)**
5. **Week 5 — CI/CD & Observability**
6. **Week 6 — Security, DR, Hardening**

---

## Global Decisions (fill once; update via ADRs if changed)

```json
{
  "runtime": "<Node.js 20 | Python 3.11>",
  "region": "us-east-1",
  "iac": "Terraform 1.6+",
  "auth": "Cognito user pools (hosted UI)",
  "tenancy_isolation": "tenantId in JWT + IAM condition keys",
  "data_model": "DynamoDB single-table, PITR on",
  "async": "EventBridge → SQS → Lambda; Step Functions",
  "analytics": "Firehose → S3 → Glue → Athena (+ QuickSight optional)",
  "cicd": "GitHub Actions with OIDC to AWS",
  "feature_flags": "AppConfig",
  "security_edge": "CloudFront + WAF/Shield",
  "secrets": "SSM Parameter Store / Secrets Manager + KMS",
  "accounts": "Single account to start; consider multi-account later"
}
```

---

## Security Guardrails (baseline)

* [ ] IAM least‑privilege; deny wildcards.
* [ ] KMS encryption for S3, DynamoDB, Secrets.
* [ ] HTTPS only (CloudFront + ACM), WAF managed rules + rate limiting.
* [ ] CloudTrail enabled (all regions) to S3; GuardDuty + Security Hub.
* [ ] Budgets + cost anomaly alerts; default resource tags.

---

## Definition of Done (End Goal)

1. CloudFront+WAF HTTPS SPA at your domain.
2. Cognito sign‑up/sign‑in; `/me` returns JWT (incl. `tenantId`).
3. Tenant‑scoped CRUD via API GW → Lambda → DynamoDB (IAM conditions enforced).
4. EventBridge → SQS → worker Lambda path observable; DLQ alarms.
5. AppConfig feature flag flips behavior without redeploy.
6. Stripe test webhooks update subscription state idempotently.
7. Athena queries on S3 event lake; (optional) QuickSight dashboard.
8. CI/CD with plan/apply approvals, smoke tests, canary deploy + rollback.
9. X‑Ray traces, CloudWatch alarms (5xx/latency/throttle/DLQ depth).
10. Docs: README, ADRs, runbooks, threat model, DR game day notes, 1‑week cost snapshot.

**DoD JSON snapshot (template)**

```json
{
  "dod": {
    "frontend": "https://<your-domain>",
    "auth": "Cognito hosted UI working; /me returns claims",
    "api_tenant_isolation": "IAM conditions enforce tenantId",
    "async": "Event → SQS → worker → metrics & logs; DLQ=0",
    "flags": "AppConfig toggle demonstrated",
    "billing": "Stripe test webhooks processed idempotently",
    "analytics": "Athena query returns DAU/WAU sample",
    "cicd": "Plan→Apply with approval; canary & rollback",
    "observability": "X-Ray traces linked; alarms green",
    "security_cost": "WAF, Security Hub, Budgets active"
  }
}
```

---

## Week‑by‑Week Plan (Checklists + JSON Plan Snapshots)

### Week 1 — Foundations

**Checklist**

* [ ] Create AWS sandbox account; enable MFA on root; create admin role.
* [ ] Set $10 budget alert (email).
* [ ] Enable CloudTrail (all regions) → S3; enable GuardDuty.
* [ ] Terraform remote state: S3 bucket + DynamoDB lock table.
* [ ] Providers/backends configured; `terraform init` green.
* [ ] S3 static site + CloudFront + ACM; WAF managed rules.
* [ ] “Hello World” index.html served over HTTPS.

**Verification**

* Console: Budgets (Active), CloudTrail trail (Logging), GuardDuty (Enabled), CloudFront (Deployed), WAF (Associated).
* CLI: `terraform init && terraform validate` succeeds.

**JSON Plan Snapshot**

```json
{
  "week": 1,
  "title": "Foundations",
  "status": "planned",
  "objectives": [
    "Guardrails and cost controls enabled",
    "Terraform backend ready",
    "Public HTTPS site online behind WAF"
  ],
  "tasks": [
    "Budget + alerts",
    "CloudTrail all regions + GuardDuty",
    "S3 state bucket + DynamoDB lock table",
    "Terraform backend/provider files",
    "CloudFront + ACM + WAF + S3 website"
  ],
  "acceptance_criteria": [
    "HTTPS domain loads index.html",
    "`terraform init` and `validate` pass"
  ],
  "evidence": {
    "urls": ["https://<cloudfront-or-domain>/"],
    "screenshots": [
      "docs/screenshots/budget.png",
      "docs/screenshots/cloudtrail.png",
      "docs/screenshots/cloudfront.png"
    ]
  }
}
```

---

### Week 2 — Auth & Core API

**Checklist**

* [ ] Cognito user pool + hosted UI.
* [ ] API Gateway (HTTP) + Lambda boilerplate.
* [ ] JWT authorizer; `/me` returns claims incl. `tenantId`.
* [ ] DynamoDB table (single‑table) with PITR + TTL + GSIs.
* [ ] Tenant‑scoped CRUD (USER/ORG) with IAM condition keys.

**Verification**

* Login works via hosted UI; calling `/me` shows JWT claims.
* Cross‑tenant access attempts are denied.

**JSON Plan Snapshot**

```json
{
  "week": 2,
  "title": "Auth & Core API",
  "status": "planned",
  "objectives": [
    "Users can authenticate",
    "Tenant boundary enforced in API"
  ],
  "tasks": [
    "Cognito pool + app client",
    "Lambda handlers + router",
    "JWT integration + authorizer",
    "DynamoDB single-table + GSIs",
    "IAM policy conditions by tenantId"
  ],
  "acceptance_criteria": [
    "`/me` returns expected claims",
    "CRUD operations scoped to tenant"
  ],
  "evidence": {"screenshots": ["docs/screenshots/cognito-login.png"]}
}
```

---

### Week 3 — Async & Feature Flags

**Checklist**

* [ ] EventBridge bus; domain events emitted.
* [ ] SQS queue + DLQ; worker Lambda processes messages.
* [ ] Step Functions for long‑running task (e.g., provision tenant).
* [ ] AppConfig feature flag influencing API behavior.

**Verification**

* Event triggers worker; metrics/logs confirm processing.
* Toggle flag → API behavior changes without deploy.

**JSON Plan Snapshot**

```json
{
  "week": 3,
  "title": "Async & Flags",
  "status": "planned",
  "objectives": ["Reliable async processing", "Progressive delivery via flags"],
  "tasks": [
    "EventBridge bus + schemas",
    "SQS + DLQ + worker Lambda",
    "Step Functions state machine",
    "AppConfig app/env/profile + flag"
  ],
  "acceptance_criteria": [
    "Events flow end-to-end",
    "Flag toggles observable response change"
  ]
}
```

---

### Week 4 — Analytics & Billing

**Checklist**

* [ ] Stripe test mode; webhook via API GW + Lambda; signature verified.
* [ ] Idempotent subscription updates in DynamoDB.
* [ ] EventBridge → Firehose → S3 partitions (y/m/d/type).
* [ ] Glue crawler; Athena external tables; 2 queries.

**Verification**

* `invoice.paid` updates SUBSCRIPTION item; retry safe.
* Athena query returns rows from latest partition.

**JSON Plan Snapshot**

```json
{
  "week": 4,
  "title": "Analytics & Billing",
  "status": "planned",
  "objectives": ["Billing lifecycle tracked", "Events queryable in Athena"],
  "tasks": [
    "Stripe webhook Lambda with signature validation",
    "Conditional writes for idempotency",
    "Firehose delivery + S3 partitioning",
    "Glue catalog + Athena tables/queries"
  ],
  "acceptance_criteria": [
    "Subscription state reflects webhook events",
    "Queries run over latest event partitions"
  ]
}
```

---

### Week 5 — CI/CD & Observability

**Checklist**

* [ ] GitHub Actions: lint/unit/integration; Terraform plan (PR) + apply (main with approval).
* [ ] Smoke tests post‑deploy; canary release for API stage.
* [ ] X‑Ray traces across API → Lambda → DynamoDB.
* [ ] CloudWatch alarms: latency, 5xx, throttles, DLQ depth, failed Step Functions.

**Verification**

* PR shows green checks and plan; main deploy runs with approval.
* Canary traffic shift + rollback path validated.

**JSON Plan Snapshot**

```json
{
  "week": 5,
  "title": "CI/CD & Observability",
  "status": "planned",
  "objectives": ["Automated deploys with safety", "Actionable telemetry"],
  "tasks": [
    "OIDC to AWS; Terraform plan/apply workflows",
    "Smoke + integration tests",
    "Weighted canary stage + promotion/rollback",
    "X-Ray tracing + log correlation",
    "CloudWatch alarms + dashboards"
  ],
  "acceptance_criteria": [
    "Manual approval gates present",
    "Traces link request → function → DB",
    "Alarms cover key SLOs"
  ]
}
```

---

### Week 6 — Security, DR, Hardening

**Checklist**

* [ ] KMS everywhere; WAF tuning; deny-by-default IAM where possible.
* [ ] Security Hub findings triaged; Access Analyzer clean.
* [ ] Budgets + cost anomaly alerts; tag enforcement.
* [ ] DR game day: (stretch) DynamoDB global tables; CloudFront origin failover; Route 53 health checks.

**Verification**

* Security Hub posture improved; zero High findings.
* Game day meets RTO/RPO targets.

**JSON Plan Snapshot**

```json
{
  "week": 6,
  "title": "Security, DR, Hardening",
  "status": "planned",
  "objectives": ["Minimize blast radius", "Prove recovery"],
  "tasks": [
    "Encrypt at rest (S3/DDB/Secrets) with KMS",
    "WAF managed + custom rules; rate limiting",
    "Security Hub/GuardDuty triage",
    "DR rehearsal; (optional) multi-region"
  ],
  "acceptance_criteria": [
    "No critical security findings",
    "Documented DR results with RTO/RPO met"
  ]
}
```

---

## Evidence & Deliverables Index

* Screenshots: `docs/screenshots/*`
* Queries: `docs/athena/*.sql`
* Diagrams: `docs/diagrams/architecture.drawio`
* Runbooks: `docs/runbooks/*.md`
* ADRs: `docs/adr/*.md`

---

## First‑Message Handoff (paste into any new chat)

```
Context for this project:
- Repo: <YOUR_GITHUB_URL>
- Machine‑readable overview: /docs/llm-context.json
- Live status: /docs/progress.md (JSON snapshots)” + JSON snapshots)
You are my Socratic AWS Coach. Restate my goal; ask 3 questions; propose 2–3 next actions; include hints and checks.
```

---

## llm-context.json (ready‑to‑create)

```json
{
  "project_name": "Production-Grade Multi-Tenant Serverless SaaS on AWS",
  "summary_one_liner": "Build a production-ready, multi-tenant serverless SaaS with Terraform, CI/CD, security guardrails, observability, analytics, and DR.",
  "stack": {
    "frontend": "S3 + CloudFront + Route53 + ACM",
    "auth": "Amazon Cognito (user pools, hosted UI)",
    "api": "API Gateway (HTTP) → AWS Lambda (Node/Python)",
    "data": "DynamoDB single-table (PITR, TTL, GSIs) + S3 data lake",
    "async": "EventBridge → SQS → Lambda; Step Functions",
    "config_secrets": "AppConfig, SSM Parameter Store/Secrets Manager, KMS",
    "analytics": "Firehose → S3 → Glue → Athena (+ QuickSight optional)",
    "security_edge": "WAF/Shield, IAM least-privilege",
    "observability": "CloudWatch Logs/Metrics/Alarms, X-Ray",
    "iac_cicd": "Terraform; GitHub Actions (OIDC)"
  },
  "repo_layout": [
    "/infra/terraform/",
    "/services/api/",
    "/services/workers/",
    "/frontend/",
    "/docs/",
    "/.github/workflows/"
  ],
  "milestones": [
    "Week 1: Foundations",
    "Week 2: Auth & Core API",
    "Week 3: Async & Flags",
    "Week 4: Analytics & Billing",
    "Week 5: CI/CD & Observability",
    "Week 6: Security, DR, Hardening"
  ],
```
